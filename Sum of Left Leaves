/*         404. Sum of Left Leaves

Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.              */




/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
    if(root == null || isLeaf(root))
    {
        return 0;
    }
    
    return sumRec(root);
}

boolean isLeaf(TreeNode root)
{
    return root.left == null && root.right == null;
}

int sumRec(TreeNode root)
{
    int leftSum = 0;
    if(root.left != null)
    {
        if(isLeaf(root.left))
        {
            leftSum = root.left.val;
        }
        else
        {
            leftSum = sumRec(root.left);
        }
    }
    
    if(root.right != null)
    {
        leftSum += sumRec(root.right);
    }
    
    return leftSum; 
    }
}
