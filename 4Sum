/*    18. 4Sum

Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Notice that the solution set must not contain duplicate quadruplets.

 

Example 1:

Input: nums = [1,0,-1,0,-2,2], target = 0
Output: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]
Example 2:

Input: nums = [], target = 0
Output: []                                        */



class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
      int len = nums.length;
        List<List<Integer>> result = new ArrayList<>();
        
        if (len < 4) {
            return Collections.emptyList();
        }

        Arrays.sort(nums);

        if (len == 4) {
            if (nums[0] + nums[1] + nums[2] + nums[3] == target) {
                result.add(Arrays.asList(nums[0], nums[1], nums[2], nums[3]));
                return result;
            } else {
                return Collections.emptyList();
            }
        }

        for (int i = 0; i < len - 3; i++) {
            if (i > 0 && nums[i] == nums[i-1]) {
                continue;
            }

            int minTemp = nums[i] + nums[i+1] + nums[i+2] + nums[i+3];
            if (minTemp > target) {
                break;
            }

            int maxTemp = nums[i] + nums[len-1] + nums[len-2] + nums[len-3];
            if (maxTemp < target) {
                continue;
            }

            for (int j = i + 1; j < len - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1]) {
                    continue;
                }
                
                int left = j + 1;
                int right = len - 1;

                if (nums[i] + nums[j] + nums[left] + nums[left+1] > target) {
                    break;
                }

                if (nums[i] + nums[j] + nums[right] + nums[right-1] < target) {
                    continue;
                }

                while (left < right) {
                    int tmp = nums[i] + nums[j] + nums[left] + nums[right];
                    if (tmp == target) {
                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));
                        left++;
                        right--;
                        while (left < right && nums[left] == nums[left-1]) {
                            left++;
                        }
                        while (left < right && nums[right] == nums[right+1]) {
                            right--;
                        }
                    } else if (tmp > target) {
                        right--;
                    } else {
                        left++;
                    }
                }
            }
        }
        return result;  
    }
}
