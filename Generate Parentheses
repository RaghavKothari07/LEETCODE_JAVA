/*     22. Generate Parentheses

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

 

Example 1:

Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]
Example 2:

Input: n = 1
Output: ["()"]                                              */



class Solution {
    List<String> all = new ArrayList();
    public List<String> generateParenthesis(int n) {
        //
    recursion(n,n,"");
    
    return all;
    
    
}
public void recursion(int open, int close, String str)
{
    if(open < 0 || close < 0)return;
    if(open == 0 && close == 0)
    {
        all.add(str);
    }
    
    if(open > 0)
    {
        
        recursion(open-1,close,str+"(");
    }
    if(close > 0 && close > open)
    {
        recursion(open,close-1,str+")");
            
    }
    }
}
