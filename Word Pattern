/*     290. Word Pattern

Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false                                          */



class Solution {
    public boolean wordPattern(String pattern, String s) {
        String[] sArr = s.split(" ");
        if(sArr.length != pattern.length()){return false;}
        HashMap<Character, String> myMap = new HashMap<Character, String>();
        HashMap<String, Character> stringMap = new HashMap<String, Character>();
        for(int i = 0; i<pattern.length(); i++)
        {
            char currChar = pattern.charAt(i);
            if(myMap.get(currChar) == null){myMap.put(currChar, sArr[i]);}
            else
            {
                if(myMap.get(currChar).equals(sArr[i]) == false){return false;}
            }
            if(stringMap.get(sArr[i]) == null){stringMap.put(sArr[i], currChar);}
            else
            {
                if(stringMap.get(sArr[i]) != currChar){return false;}
            }
        }
        return true;
    }
}
