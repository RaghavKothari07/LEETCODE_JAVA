/*     205. Isomorphic Strings

Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true                           */



class Solution {
    public boolean isIsomorphic(String s, String t) {
    Map<Character, Integer> sMap = new TreeMap<>();
    Map<Character, Integer> tMap = new TreeMap<>();
    Map<Character, Character> map = new TreeMap<>();
    if (s.equals(t)) return true;
    for (int i = 0; i < s.length(); i++) {
      if (!map.containsKey(s.charAt(i))) map.put(s.charAt(i), t.charAt(i));
      if (map.get(s.charAt(i)) != t.charAt(i)) return false;

      if (sMap.containsKey(s.charAt(i))) sMap.put(s.charAt(i), sMap.get(s.charAt(i)) + 1);
      else sMap.put(s.charAt(i), 1);

      if (tMap.containsKey(t.charAt(i))) tMap.put(t.charAt(i), tMap.get(t.charAt(i)) + 1);
      else tMap.put(t.charAt(i), 1);

    }
    if (sMap.size() != tMap.size()) return false;
    return true; 
    }
}
