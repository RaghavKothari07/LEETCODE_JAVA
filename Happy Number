/*     202. Happy Number

Write an algorithm to determine if a number n is happy.

A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.

 

Example 1:

Input: n = 19
Output: true
Explanation:
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1             */



class Solution {
    public boolean isHappy(int n) {
        int originalN = n;
        if (n < 1)
            return false;
        int p = 0;
        int newN = 0;
        int q = 0;
        while (n > 3) {
            newN = 0;
            while (n > 0) {
                q = n % 10;
                newN += q * q;
                n = n / 10;
            }
            if (newN == originalN || newN == 4)
                return false;
            n = newN;
        }
        return (n == 1)? true : false;
    }
}
