/*     118. Pascal's Triangle

Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]                              */




class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<List<Integer>>();
        if(numRows == 0) return triangle;
        for(int i = 0; i < numRows; i++){
            List<Integer> level = new ArrayList<>();
            for(int j = 0; j<=i; j++){
                if(j ==0 || j == i){
                    level.add(1);
                }else{
                    List<Integer> preRow = triangle.get(i-1);
                    level.add(preRow.get(j) + preRow.get(j-1));
                }
                
            }
            triangle.add(level);
        }
        return triangle;
    }
}
