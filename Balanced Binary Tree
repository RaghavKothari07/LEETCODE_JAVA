/*     110. Balanced Binary Tree

Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: true                             */



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(getHeightDiff(root)==-1) return false;
        return true;
    }
    
    public int getHeightDiff(TreeNode node){
        if(node==null) return 0;
        
        int leftH = getHeightDiff(node.left);
        int rightH = getHeightDiff(node.right);
        
        if(leftH==-1 || rightH==-1 || Math.abs(leftH-rightH)>1) return -1;
        
        return Math.max(leftH,rightH)+1;        
    }
}
